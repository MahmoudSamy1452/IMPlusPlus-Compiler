Grammar

    0 $accept: program $end

    1 program: statement ';' program
    2        | /* empty */
    3        | ';' program

    4 declaration: datatype VARIABLE
    5            | datatype VARIABLE '=' assignmentValue
    6            | CONST datatype VARIABLE '=' assignmentValue

    7 assignment: VARIABLE '=' assignmentValue

    8 assignmentValue: expression
    9                | CHAR
   10                | CHARARRAY
   11                | VARIABLE '(' parameters ')'

   12 initialization: declaration
   13               | assignment

   14 statement: initialization
   15          | WHILE '(' expression ')' scope
   16          | REPEAT scope UNTIL '(' expression ')'
   17          | FOR '(' initialization ';' expression ';' assignment ')' scope
   18          | SWITCH '(' expression ')' '{' case '}'
   19          | scope
   20          | IF '(' expression ')' THEN scope
   21          | IF '(' expression ')' THEN scope ELSE scope
   22          | FUNCTION datatype VARIABLE '(' arguments ')' scope
   23          | FUNCTION VOID VARIABLE '(' arguments ')' scope
   24          | VARIABLE '(' parameters ')'
   25          | RETURN assignmentValue
   26          | RETURN

   27 argumentsList: datatype VARIABLE
   28              | datatype VARIABLE ',' argumentsList

   29 arguments: argumentsList
   30          | /* empty */

   31 parametersList: assignmentValue ',' parametersList
   32               | assignmentValue

   33 parameters: parametersList
   34           | /* empty */

   35 case: CASE caseCondition ':' scope
   36     | CASE caseCondition ':' scope case

   37 caseCondition: /* empty */
   38              | CHAR
   39              | caseExpression

   40 caseExpression: INTEGER
   41               | BOOLEAN
   42               | caseExpression '<' caseExpression
   43               | caseExpression '>' caseExpression
   44               | caseExpression LE caseExpression
   45               | caseExpression GE caseExpression
   46               | caseExpression EQ caseExpression
   47               | caseExpression NE caseExpression
   48               | caseExpression '|' caseExpression
   49               | caseExpression '&' caseExpression
   50               | caseExpression '+' caseExpression
   51               | caseExpression '-' caseExpression
   52               | caseExpression '*' caseExpression
   53               | caseExpression '/' caseExpression
   54               | '~' caseExpression
   55               | '-' caseExpression
   56               | '(' caseExpression ')'

   57 expression: FLOATING
   58           | INTEGER
   59           | BOOLEAN
   60           | VARIABLE
   61           | expression '<' expression
   62           | expression '>' expression
   63           | expression LE expression
   64           | expression GE expression
   65           | expression EQ expression
   66           | expression NE expression
   67           | expression '|' expression
   68           | expression '&' expression
   69           | expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression
   73           | '~' expression
   74           | '-' expression
   75           | '(' expression ')'

   76 datatype: INT
   77         | FLOAT
   78         | BOOL
   79         | CHARACTER
   80         | STRING

   81 scope: '{' program '}'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 49 68
'(' (40) 11 15 16 17 18 20 21 22 23 24 56 75
')' (41) 11 15 16 17 18 20 21 22 23 24 56 75
'*' (42) 52 71
'+' (43) 50 69
',' (44) 28 31
'-' (45) 51 55 70 74
'/' (47) 53 72
':' (58) 35 36
';' (59) 1 3 17
'<' (60) 42 61
'=' (61) 5 6 7
'>' (62) 43 62
'{' (123) 18 81
'|' (124) 48 67
'}' (125) 18 81
'~' (126) 54 73
error (256)
INTEGER (258) 40 58
FLOATING (259) 57
BOOLEAN (260) 41 59
CHAR (261) 9 38
CHARARRAY (262) 10
VARIABLE (263) 4 5 6 7 11 22 23 24 27 28 60
WHILE (264) 15
REPEAT (265) 16
UNTIL (266) 16
FOR (267) 17
SWITCH (268) 18
CASE (269) 35 36
IF (270) 20 21
THEN (271) 20 21
ELSE (272) 21
FUNCTION (273) 22 23
RETURN (274) 25 26
INT (275) 76
FLOAT (276) 77
CHARACTER (277) 79
STRING (278) 80
BOOL (279) 78
VOID (280) 23
CONST (281) 6
GE (282) 45 64
LE (283) 44 63
EQ (284) 46 65
NE (285) 47 66


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2 3, on right: 0 1 3 81
declaration (50)
    on left: 4 5 6, on right: 12
assignment (51)
    on left: 7, on right: 13 17
assignmentValue (52)
    on left: 8 9 10 11, on right: 5 6 7 25 31 32
initialization (53)
    on left: 12 13, on right: 14 17
statement (54)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26, on right: 1
argumentsList (55)
    on left: 27 28, on right: 28 29
arguments (56)
    on left: 29 30, on right: 22 23
parametersList (57)
    on left: 31 32, on right: 31 33
parameters (58)
    on left: 33 34, on right: 11 24
case (59)
    on left: 35 36, on right: 18 36
caseCondition (60)
    on left: 37 38 39, on right: 35 36
caseExpression (61)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    39 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
expression (62)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75, on right: 8 15 16 17 18 20 21 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75
datatype (63)
    on left: 76 77 78 79 80, on right: 4 5 6 22 27 28
scope (64)
    on left: 81, on right: 15 16 17 19 20 21 22 23 35 36


state 0

    0 $accept: . program $end

    VARIABLE   shift, and go to state 1
    WHILE      shift, and go to state 2
    REPEAT     shift, and go to state 3
    FOR        shift, and go to state 4
    SWITCH     shift, and go to state 5
    IF         shift, and go to state 6
    FUNCTION   shift, and go to state 7
    RETURN     shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    CONST      shift, and go to state 14
    ';'        shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 2 (program)

    program         go to state 17
    declaration     go to state 18
    assignment      go to state 19
    initialization  go to state 20
    statement       go to state 21
    datatype        go to state 22
    scope           go to state 23


state 1

    7 assignment: VARIABLE . '=' assignmentValue
   24 statement: VARIABLE . '(' parameters ')'

    '='  shift, and go to state 24
    '('  shift, and go to state 25


state 2

   15 statement: WHILE . '(' expression ')' scope

    '('  shift, and go to state 26


state 3

   16 statement: REPEAT . scope UNTIL '(' expression ')'

    '{'  shift, and go to state 16

    scope  go to state 27


state 4

   17 statement: FOR . '(' initialization ';' expression ';' assignment ')' scope

    '('  shift, and go to state 28


state 5

   18 statement: SWITCH . '(' expression ')' '{' case '}'

    '('  shift, and go to state 29


state 6

   20 statement: IF . '(' expression ')' THEN scope
   21          | IF . '(' expression ')' THEN scope ELSE scope

    '('  shift, and go to state 30


state 7

   22 statement: FUNCTION . datatype VARIABLE '(' arguments ')' scope
   23          | FUNCTION . VOID VARIABLE '(' arguments ')' scope

    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    VOID       shift, and go to state 31

    datatype  go to state 32


state 8

   25 statement: RETURN . assignmentValue
   26          | RETURN .

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    $default  reduce using rule 26 (statement)

    assignmentValue  go to state 42
    expression       go to state 43


state 9

   76 datatype: INT .

    $default  reduce using rule 76 (datatype)


state 10

   77 datatype: FLOAT .

    $default  reduce using rule 77 (datatype)


state 11

   79 datatype: CHARACTER .

    $default  reduce using rule 79 (datatype)


state 12

   80 datatype: STRING .

    $default  reduce using rule 80 (datatype)


state 13

   78 datatype: BOOL .

    $default  reduce using rule 78 (datatype)


state 14

    6 declaration: CONST . datatype VARIABLE '=' assignmentValue

    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13

    datatype  go to state 44


state 15

    3 program: ';' . program

    VARIABLE   shift, and go to state 1
    WHILE      shift, and go to state 2
    REPEAT     shift, and go to state 3
    FOR        shift, and go to state 4
    SWITCH     shift, and go to state 5
    IF         shift, and go to state 6
    FUNCTION   shift, and go to state 7
    RETURN     shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    CONST      shift, and go to state 14
    ';'        shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 2 (program)

    program         go to state 45
    declaration     go to state 18
    assignment      go to state 19
    initialization  go to state 20
    statement       go to state 21
    datatype        go to state 22
    scope           go to state 23


state 16

   81 scope: '{' . program '}'

    VARIABLE   shift, and go to state 1
    WHILE      shift, and go to state 2
    REPEAT     shift, and go to state 3
    FOR        shift, and go to state 4
    SWITCH     shift, and go to state 5
    IF         shift, and go to state 6
    FUNCTION   shift, and go to state 7
    RETURN     shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    CONST      shift, and go to state 14
    ';'        shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 2 (program)

    program         go to state 46
    declaration     go to state 18
    assignment      go to state 19
    initialization  go to state 20
    statement       go to state 21
    datatype        go to state 22
    scope           go to state 23


state 17

    0 $accept: program . $end

    $end  shift, and go to state 47


state 18

   12 initialization: declaration .

    $default  reduce using rule 12 (initialization)


state 19

   13 initialization: assignment .

    $default  reduce using rule 13 (initialization)


state 20

   14 statement: initialization .

    $default  reduce using rule 14 (statement)


state 21

    1 program: statement . ';' program

    ';'  shift, and go to state 48


state 22

    4 declaration: datatype . VARIABLE
    5            | datatype . VARIABLE '=' assignmentValue

    VARIABLE  shift, and go to state 49


state 23

   19 statement: scope .

    $default  reduce using rule 19 (statement)


state 24

    7 assignment: VARIABLE '=' . assignmentValue

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    assignmentValue  go to state 50
    expression       go to state 43


state 25

   24 statement: VARIABLE '(' . parameters ')'

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    $default  reduce using rule 34 (parameters)

    assignmentValue  go to state 51
    parametersList   go to state 52
    parameters       go to state 53
    expression       go to state 43


state 26

   15 statement: WHILE '(' . expression ')' scope

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 55


state 27

   16 statement: REPEAT scope . UNTIL '(' expression ')'

    UNTIL  shift, and go to state 56


state 28

   17 statement: FOR '(' . initialization ';' expression ';' assignment ')' scope

    VARIABLE   shift, and go to state 57
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    CONST      shift, and go to state 14

    declaration     go to state 18
    assignment      go to state 19
    initialization  go to state 58
    datatype        go to state 22


state 29

   18 statement: SWITCH '(' . expression ')' '{' case '}'

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 59


state 30

   20 statement: IF '(' . expression ')' THEN scope
   21          | IF '(' . expression ')' THEN scope ELSE scope

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 60


state 31

   23 statement: FUNCTION VOID . VARIABLE '(' arguments ')' scope

    VARIABLE  shift, and go to state 61


state 32

   22 statement: FUNCTION datatype . VARIABLE '(' arguments ')' scope

    VARIABLE  shift, and go to state 62


state 33

   58 expression: INTEGER .

    $default  reduce using rule 58 (expression)


state 34

   57 expression: FLOATING .

    $default  reduce using rule 57 (expression)


state 35

   59 expression: BOOLEAN .

    $default  reduce using rule 59 (expression)


state 36

    9 assignmentValue: CHAR .

    $default  reduce using rule 9 (assignmentValue)


state 37

   10 assignmentValue: CHARARRAY .

    $default  reduce using rule 10 (assignmentValue)


state 38

   11 assignmentValue: VARIABLE . '(' parameters ')'
   60 expression: VARIABLE .

    '('  shift, and go to state 63

    $default  reduce using rule 60 (expression)


state 39

   74 expression: '-' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 64


state 40

   73 expression: '~' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 65


state 41

   75 expression: '(' . expression ')'

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 66


state 42

   25 statement: RETURN assignmentValue .

    $default  reduce using rule 25 (statement)


state 43

    8 assignmentValue: expression .
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 8 (assignmentValue)


state 44

    6 declaration: CONST datatype . VARIABLE '=' assignmentValue

    VARIABLE  shift, and go to state 79


state 45

    3 program: ';' program .

    $default  reduce using rule 3 (program)


state 46

   81 scope: '{' program . '}'

    '}'  shift, and go to state 80


state 47

    0 $accept: program $end .

    $default  accept


state 48

    1 program: statement ';' . program

    VARIABLE   shift, and go to state 1
    WHILE      shift, and go to state 2
    REPEAT     shift, and go to state 3
    FOR        shift, and go to state 4
    SWITCH     shift, and go to state 5
    IF         shift, and go to state 6
    FUNCTION   shift, and go to state 7
    RETURN     shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13
    CONST      shift, and go to state 14
    ';'        shift, and go to state 15
    '{'        shift, and go to state 16

    $default  reduce using rule 2 (program)

    program         go to state 81
    declaration     go to state 18
    assignment      go to state 19
    initialization  go to state 20
    statement       go to state 21
    datatype        go to state 22
    scope           go to state 23


state 49

    4 declaration: datatype VARIABLE .
    5            | datatype VARIABLE . '=' assignmentValue

    '='  shift, and go to state 82

    $default  reduce using rule 4 (declaration)


state 50

    7 assignment: VARIABLE '=' assignmentValue .

    $default  reduce using rule 7 (assignment)


state 51

   31 parametersList: assignmentValue . ',' parametersList
   32               | assignmentValue .

    ','  shift, and go to state 83

    $default  reduce using rule 32 (parametersList)


state 52

   33 parameters: parametersList .

    $default  reduce using rule 33 (parameters)


state 53

   24 statement: VARIABLE '(' parameters . ')'

    ')'  shift, and go to state 84


state 54

   60 expression: VARIABLE .

    $default  reduce using rule 60 (expression)


state 55

   15 statement: WHILE '(' expression . ')' scope
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ')'  shift, and go to state 85


state 56

   16 statement: REPEAT scope UNTIL . '(' expression ')'

    '('  shift, and go to state 86


state 57

    7 assignment: VARIABLE . '=' assignmentValue

    '='  shift, and go to state 24


state 58

   17 statement: FOR '(' initialization . ';' expression ';' assignment ')' scope

    ';'  shift, and go to state 87


state 59

   18 statement: SWITCH '(' expression . ')' '{' case '}'
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ')'  shift, and go to state 88


state 60

   20 statement: IF '(' expression . ')' THEN scope
   21          | IF '(' expression . ')' THEN scope ELSE scope
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ')'  shift, and go to state 89


state 61

   23 statement: FUNCTION VOID VARIABLE . '(' arguments ')' scope

    '('  shift, and go to state 90


state 62

   22 statement: FUNCTION datatype VARIABLE . '(' arguments ')' scope

    '('  shift, and go to state 91


state 63

   11 assignmentValue: VARIABLE '(' . parameters ')'

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    $default  reduce using rule 34 (parameters)

    assignmentValue  go to state 51
    parametersList   go to state 52
    parameters       go to state 92
    expression       go to state 43


state 64

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   74           | '-' expression .

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 74 (expression)


state 65

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | '~' expression .

    $default  reduce using rule 73 (expression)


state 66

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   75           | '(' expression . ')'

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ')'  shift, and go to state 93


state 67

   64 expression: expression GE . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 94


state 68

   63 expression: expression LE . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 95


state 69

   65 expression: expression EQ . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 96


state 70

   66 expression: expression NE . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 97


state 71

   67 expression: expression '|' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 98


state 72

   68 expression: expression '&' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 99


state 73

   61 expression: expression '<' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 100


state 74

   62 expression: expression '>' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 101


state 75

   69 expression: expression '+' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 102


state 76

   70 expression: expression '-' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 103


state 77

   71 expression: expression '*' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 104


state 78

   72 expression: expression '/' . expression

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 105


state 79

    6 declaration: CONST datatype VARIABLE . '=' assignmentValue

    '='  shift, and go to state 106


state 80

   81 scope: '{' program '}' .

    $default  reduce using rule 81 (scope)


state 81

    1 program: statement ';' program .

    $default  reduce using rule 1 (program)


state 82

    5 declaration: datatype VARIABLE '=' . assignmentValue

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    assignmentValue  go to state 107
    expression       go to state 43


state 83

   31 parametersList: assignmentValue ',' . parametersList

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    assignmentValue  go to state 51
    parametersList   go to state 108
    expression       go to state 43


state 84

   24 statement: VARIABLE '(' parameters ')' .

    $default  reduce using rule 24 (statement)


state 85

   15 statement: WHILE '(' expression ')' . scope

    '{'  shift, and go to state 16

    scope  go to state 109


state 86

   16 statement: REPEAT scope UNTIL '(' . expression ')'

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 110


state 87

   17 statement: FOR '(' initialization ';' . expression ';' assignment ')' scope

    INTEGER   shift, and go to state 33
    FLOATING  shift, and go to state 34
    BOOLEAN   shift, and go to state 35
    VARIABLE  shift, and go to state 54
    '-'       shift, and go to state 39
    '~'       shift, and go to state 40
    '('       shift, and go to state 41

    expression  go to state 111


state 88

   18 statement: SWITCH '(' expression ')' . '{' case '}'

    '{'  shift, and go to state 112


state 89

   20 statement: IF '(' expression ')' . THEN scope
   21          | IF '(' expression ')' . THEN scope ELSE scope

    THEN  shift, and go to state 113


state 90

   23 statement: FUNCTION VOID VARIABLE '(' . arguments ')' scope

    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13

    $default  reduce using rule 30 (arguments)

    argumentsList  go to state 114
    arguments      go to state 115
    datatype       go to state 116


state 91

   22 statement: FUNCTION datatype VARIABLE '(' . arguments ')' scope

    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13

    $default  reduce using rule 30 (arguments)

    argumentsList  go to state 114
    arguments      go to state 117
    datatype       go to state 116


state 92

   11 assignmentValue: VARIABLE '(' parameters . ')'

    ')'  shift, and go to state 118


state 93

   75 expression: '(' expression ')' .

    $default  reduce using rule 75 (expression)


state 94

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   64           | expression GE expression .
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 64 (expression)


state 95

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   63           | expression LE expression .
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 63 (expression)


state 96

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   65           | expression EQ expression .
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 65 (expression)


state 97

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   66           | expression NE expression .
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 66 (expression)


state 98

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   67           | expression '|' expression .
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 67 (expression)


state 99

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   68           | expression '&' expression .
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 68 (expression)


state 100

   61 expression: expression . '<' expression
   61           | expression '<' expression .
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 61 (expression)


state 101

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   62           | expression '>' expression .
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 62 (expression)


state 102

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 69 (expression)


state 103

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 70 (expression)


state 104

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression

    $default  reduce using rule 71 (expression)


state 105

   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .

    $default  reduce using rule 72 (expression)


state 106

    6 declaration: CONST datatype VARIABLE '=' . assignmentValue

    INTEGER    shift, and go to state 33
    FLOATING   shift, and go to state 34
    BOOLEAN    shift, and go to state 35
    CHAR       shift, and go to state 36
    CHARARRAY  shift, and go to state 37
    VARIABLE   shift, and go to state 38
    '-'        shift, and go to state 39
    '~'        shift, and go to state 40
    '('        shift, and go to state 41

    assignmentValue  go to state 119
    expression       go to state 43


state 107

    5 declaration: datatype VARIABLE '=' assignmentValue .

    $default  reduce using rule 5 (declaration)


state 108

   31 parametersList: assignmentValue ',' parametersList .

    $default  reduce using rule 31 (parametersList)


state 109

   15 statement: WHILE '(' expression ')' scope .

    $default  reduce using rule 15 (statement)


state 110

   16 statement: REPEAT scope UNTIL '(' expression . ')'
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ')'  shift, and go to state 120


state 111

   17 statement: FOR '(' initialization ';' expression . ';' assignment ')' scope
   61 expression: expression . '<' expression
   62           | expression . '>' expression
   63           | expression . LE expression
   64           | expression . GE expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '|' expression
   68           | expression . '&' expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    ';'  shift, and go to state 121


state 112

   18 statement: SWITCH '(' expression ')' '{' . case '}'

    CASE  shift, and go to state 122

    case  go to state 123


state 113

   20 statement: IF '(' expression ')' THEN . scope
   21          | IF '(' expression ')' THEN . scope ELSE scope

    '{'  shift, and go to state 16

    scope  go to state 124


state 114

   29 arguments: argumentsList .

    $default  reduce using rule 29 (arguments)


state 115

   23 statement: FUNCTION VOID VARIABLE '(' arguments . ')' scope

    ')'  shift, and go to state 125


state 116

   27 argumentsList: datatype . VARIABLE
   28              | datatype . VARIABLE ',' argumentsList

    VARIABLE  shift, and go to state 126


state 117

   22 statement: FUNCTION datatype VARIABLE '(' arguments . ')' scope

    ')'  shift, and go to state 127


state 118

   11 assignmentValue: VARIABLE '(' parameters ')' .

    $default  reduce using rule 11 (assignmentValue)


state 119

    6 declaration: CONST datatype VARIABLE '=' assignmentValue .

    $default  reduce using rule 6 (declaration)


state 120

   16 statement: REPEAT scope UNTIL '(' expression ')' .

    $default  reduce using rule 16 (statement)


state 121

   17 statement: FOR '(' initialization ';' expression ';' . assignment ')' scope

    VARIABLE  shift, and go to state 57

    assignment  go to state 128


state 122

   35 case: CASE . caseCondition ':' scope
   36     | CASE . caseCondition ':' scope case

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    CHAR     shift, and go to state 131
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    $default  reduce using rule 37 (caseCondition)

    caseCondition   go to state 135
    caseExpression  go to state 136


state 123

   18 statement: SWITCH '(' expression ')' '{' case . '}'

    '}'  shift, and go to state 137


state 124

   20 statement: IF '(' expression ')' THEN scope .
   21          | IF '(' expression ')' THEN scope . ELSE scope

    ELSE  shift, and go to state 138

    $default  reduce using rule 20 (statement)


state 125

   23 statement: FUNCTION VOID VARIABLE '(' arguments ')' . scope

    '{'  shift, and go to state 16

    scope  go to state 139


state 126

   27 argumentsList: datatype VARIABLE .
   28              | datatype VARIABLE . ',' argumentsList

    ','  shift, and go to state 140

    $default  reduce using rule 27 (argumentsList)


state 127

   22 statement: FUNCTION datatype VARIABLE '(' arguments ')' . scope

    '{'  shift, and go to state 16

    scope  go to state 141


state 128

   17 statement: FOR '(' initialization ';' expression ';' assignment . ')' scope

    ')'  shift, and go to state 142


state 129

   40 caseExpression: INTEGER .

    $default  reduce using rule 40 (caseExpression)


state 130

   41 caseExpression: BOOLEAN .

    $default  reduce using rule 41 (caseExpression)


state 131

   38 caseCondition: CHAR .

    $default  reduce using rule 38 (caseCondition)


state 132

   55 caseExpression: '-' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 143


state 133

   54 caseExpression: '~' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 144


state 134

   56 caseExpression: '(' . caseExpression ')'

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 145


state 135

   35 case: CASE caseCondition . ':' scope
   36     | CASE caseCondition . ':' scope case

    ':'  shift, and go to state 146


state 136

   39 caseCondition: caseExpression .
   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    GE   shift, and go to state 147
    LE   shift, and go to state 148
    EQ   shift, and go to state 149
    NE   shift, and go to state 150
    '|'  shift, and go to state 151
    '&'  shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154
    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 39 (caseCondition)


state 137

   18 statement: SWITCH '(' expression ')' '{' case '}' .

    $default  reduce using rule 18 (statement)


state 138

   21 statement: IF '(' expression ')' THEN scope ELSE . scope

    '{'  shift, and go to state 16

    scope  go to state 159


state 139

   23 statement: FUNCTION VOID VARIABLE '(' arguments ')' scope .

    $default  reduce using rule 23 (statement)


state 140

   28 argumentsList: datatype VARIABLE ',' . argumentsList

    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    CHARACTER  shift, and go to state 11
    STRING     shift, and go to state 12
    BOOL       shift, and go to state 13

    argumentsList  go to state 160
    datatype       go to state 116


state 141

   22 statement: FUNCTION datatype VARIABLE '(' arguments ')' scope .

    $default  reduce using rule 22 (statement)


state 142

   17 statement: FOR '(' initialization ';' expression ';' assignment ')' . scope

    '{'  shift, and go to state 16

    scope  go to state 161


state 143

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression
   55               | '-' caseExpression .

    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 55 (caseExpression)


state 144

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression
   54               | '~' caseExpression .

    $default  reduce using rule 54 (caseExpression)


state 145

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression
   56               | '(' caseExpression . ')'

    GE   shift, and go to state 147
    LE   shift, and go to state 148
    EQ   shift, and go to state 149
    NE   shift, and go to state 150
    '|'  shift, and go to state 151
    '&'  shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154
    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158
    ')'  shift, and go to state 162


state 146

   35 case: CASE caseCondition ':' . scope
   36     | CASE caseCondition ':' . scope case

    '{'  shift, and go to state 16

    scope  go to state 163


state 147

   45 caseExpression: caseExpression GE . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 164


state 148

   44 caseExpression: caseExpression LE . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 165


state 149

   46 caseExpression: caseExpression EQ . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 166


state 150

   47 caseExpression: caseExpression NE . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 167


state 151

   48 caseExpression: caseExpression '|' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 168


state 152

   49 caseExpression: caseExpression '&' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 169


state 153

   42 caseExpression: caseExpression '<' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 170


state 154

   43 caseExpression: caseExpression '>' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 171


state 155

   50 caseExpression: caseExpression '+' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 172


state 156

   51 caseExpression: caseExpression '-' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 173


state 157

   52 caseExpression: caseExpression '*' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 174


state 158

   53 caseExpression: caseExpression '/' . caseExpression

    INTEGER  shift, and go to state 129
    BOOLEAN  shift, and go to state 130
    '-'      shift, and go to state 132
    '~'      shift, and go to state 133
    '('      shift, and go to state 134

    caseExpression  go to state 175


state 159

   21 statement: IF '(' expression ')' THEN scope ELSE scope .

    $default  reduce using rule 21 (statement)


state 160

   28 argumentsList: datatype VARIABLE ',' argumentsList .

    $default  reduce using rule 28 (argumentsList)


state 161

   17 statement: FOR '(' initialization ';' expression ';' assignment ')' scope .

    $default  reduce using rule 17 (statement)


state 162

   56 caseExpression: '(' caseExpression ')' .

    $default  reduce using rule 56 (caseExpression)


state 163

   35 case: CASE caseCondition ':' scope .
   36     | CASE caseCondition ':' scope . case

    CASE  shift, and go to state 122

    $default  reduce using rule 35 (case)

    case  go to state 176


state 164

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   45               | caseExpression GE caseExpression .
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 45 (caseExpression)


state 165

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   44               | caseExpression LE caseExpression .
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 44 (caseExpression)


state 166

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   46               | caseExpression EQ caseExpression .
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 46 (caseExpression)


state 167

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   47               | caseExpression NE caseExpression .
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 47 (caseExpression)


state 168

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   48               | caseExpression '|' caseExpression .
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    GE   shift, and go to state 147
    LE   shift, and go to state 148
    EQ   shift, and go to state 149
    NE   shift, and go to state 150
    '&'  shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154
    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 48 (caseExpression)


state 169

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   49               | caseExpression '&' caseExpression .
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    GE   shift, and go to state 147
    LE   shift, and go to state 148
    EQ   shift, and go to state 149
    NE   shift, and go to state 150
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154
    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 49 (caseExpression)


state 170

   42 caseExpression: caseExpression . '<' caseExpression
   42               | caseExpression '<' caseExpression .
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 42 (caseExpression)


state 171

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   43               | caseExpression '>' caseExpression .
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '+'  shift, and go to state 155
    '-'  shift, and go to state 156
    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 43 (caseExpression)


state 172

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   50               | caseExpression '+' caseExpression .
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 50 (caseExpression)


state 173

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   51               | caseExpression '-' caseExpression .
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression

    '*'  shift, and go to state 157
    '/'  shift, and go to state 158

    $default  reduce using rule 51 (caseExpression)


state 174

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   52               | caseExpression '*' caseExpression .
   53               | caseExpression . '/' caseExpression

    $default  reduce using rule 52 (caseExpression)


state 175

   42 caseExpression: caseExpression . '<' caseExpression
   43               | caseExpression . '>' caseExpression
   44               | caseExpression . LE caseExpression
   45               | caseExpression . GE caseExpression
   46               | caseExpression . EQ caseExpression
   47               | caseExpression . NE caseExpression
   48               | caseExpression . '|' caseExpression
   49               | caseExpression . '&' caseExpression
   50               | caseExpression . '+' caseExpression
   51               | caseExpression . '-' caseExpression
   52               | caseExpression . '*' caseExpression
   53               | caseExpression . '/' caseExpression
   53               | caseExpression '/' caseExpression .

    $default  reduce using rule 53 (caseExpression)


state 176

   36 case: CASE caseCondition ':' scope case .

    $default  reduce using rule 36 (case)
